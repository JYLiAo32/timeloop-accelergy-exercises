architecture:
  # ============================================================
  # Architecture Description
  # ============================================================
  version: 0.4
  nodes: # Top-level is hierarchical
  - !Container # Top-level system
    name: system
    attributes:
      technology: "32nm"
      global_cycle_seconds: 1e-9
  
  - !Component # DRAM main memory
    name: DRAM
    class: DRAM
    attributes:
      type: "LPDDR4"
      width: 64
      datawidth: 8

  - !Container # Eyeriss accelerator
    name: eyeriss

  - !Component # Global buffer for inputs & outputs
    name: shared_glb
    class: smartbuffer_SRAM
    attributes:
      depth: 16384
      width: 64
      n_banks: 32  # FIXME: 什么意思？
      datawidth: 8
      read_bandwidth: 16  # FIXME: 什么意思？
      write_bandwidth: 16  # FIXME: 什么意思？
    constraints:
      dataspace: {keep: [Inputs, Outputs], bypass: [Weights]}

  - !Container # Each column of PEs produces a different psum row
    name: PE_column
    spatial: {meshX: 14}
    constraints:
      spatial:  # 并行计算的约束
        permutation: [N, C, P, R, S, Q, M]  # 约束限定了空间映射的顺序
        factors: [N=1, C=1, P=1, R=1, S=1]
        split: 7  # FIXME: 什么意思？

  - !Container # Each PE in the column receives a different filter row
    name: PE
    spatial: {meshY: 12}  # NOTE: 并行数量累乘，实际为14*12=168个PE
    constraints:
      spatial:
        split: 4
        permutation: [N, P, Q, R, S, C, M]
        factors: [N=1, P=1, Q=1, R=1]

  - !Parallel # Input/Output/Weight scratchpads in parallel
    nodes:
    # 每个PE有一个输入/输出/权重 scratchpad(寄存器)
    - !Component # Input scratchpad
      name: ifmap_spad
      class: smartbuffer_RF
      attributes:
        depth: 12
        width: 16
        datawidth: 8
        read_bandwidth: 2
        write_bandwidth: 2
      constraints:
        dataspace: {keep: [Inputs]}
        temporal:
          permutation: [N, M, C, P, Q, R, S]
          factors: [N=1, M=1, C=1, P=1, Q=1, R=1, S=1]

    - !Component # Weight scratchpad
      name: weights_spad
      class: smartbuffer_RF
      attributes:
        depth: 192
        width: 16
        datawidth: 8
        read_bandwidth: 2
        write_bandwidth: 2
      constraints:
        dataspace: {keep: [Weights]}
        temporal:
          permutation: [N, M, P, Q, S, C, R]
          factors: [N=1, M=1, P=1, Q=1, S=1]

    - !Component # Output scratchpad
      name: psum_spad
      class: smartbuffer_RF
      attributes:
        depth: 16
        width: 16
        update_fifo_depth: 2
        datawidth: 16
        read_bandwidth: 2
        write_bandwidth: 2
      constraints:
        dataspace: {keep: [Outputs]}
        temporal:
          permutation: [N, C, P, Q, R, S, M] 
          factors: [N=1, C=1, R=1, S=1, P=1, Q=1]
  
  # NOTE: 注意这里的改造方法！v2中MAC和前面三者处于同一个subtree
  #   但是这里MAC独立出来，而前三者下属于!parallel分支
  - !Component # MAC unit
    name: mac
    class: intmac
    attributes:
      multiplier_width: 8
      adder_width: 16
